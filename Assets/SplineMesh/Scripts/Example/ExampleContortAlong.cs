using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;
using DG.Tweening;
namespace SplineMesh {
    /// <summary>
    /// Example of component to show the deformation of a mesh in a changing
    /// interval in spline space.
    /// 
    /// This component is only for demo purpose and is not intended to be used as-is.
    /// </summary>
    [ExecuteInEditMode]
    [RequireComponent(typeof(Spline))]
    public class ExampleContortAlong : MonoBehaviour {
        private Spline spline;
        public float rate = 0;
        private MeshBender meshBender;

        [HideInInspector]
        public GameObject generated;

        public Mesh mesh;
        public Material material;
        public Vector3 rotation;
        public Vector3 scale;

        public float DurationInSecond;
        public float interval = 0.01f;
        public bool canFade;

        private void OnEnable()
        {
            rate = 0;
            Init();
            material.DOFade(0.5f, 0.1f);
            StartCoroutine(FakeUpdate());
        }

        private void OnDisable()
        {
            StopAllCoroutines();
        }


        private IEnumerator FakeUpdate()
        {
            Contort();
            yield return new WaitForSecondsRealtime(interval);
            StartCoroutine(FakeUpdate());
        }

        private void Contort() {
            if (generated != null) 
            {
                meshBender.SetInterval(spline, spline.Length * rate);
                meshBender.ComputeIfNeeded();

                if(canFade)
                {
                    if(rate>0.5)
                    {
                        material.DOFade(0, 0.7f);
                    }
                    else
                    {

                        material.DOFade(0.5f, 0.1f);
                    }
                }
            }
        }

        private void Init() 
        {
           
            StopAllCoroutines();
            rate = 0;
            string generatedName = "generated by " + GetType().Name;
            var generatedTranform = transform.Find(generatedName);
            generated = generatedTranform != null ? generatedTranform.gameObject : UOUtility.Create(generatedName, gameObject,
                typeof(MeshFilter),
                typeof(MeshRenderer),
                typeof(MeshBender));

            generated.GetComponent<MeshRenderer>().material = material;

            meshBender = generated.GetComponent<MeshBender>();
            spline = GetComponent<Spline>();

            meshBender.Source = SourceMesh.Build(mesh)
                .Rotate(Quaternion.Euler(rotation))
                .Scale(scale);
            meshBender.Mode = MeshBender.FillingMode.Once;
            meshBender.SetInterval(spline, 0);
            

        }
        private void Update()
        {
            rate += Time.deltaTime / DurationInSecond;
            if (rate > 1)
            {
                rate--;
            }

        
        }
    }
        
    }
